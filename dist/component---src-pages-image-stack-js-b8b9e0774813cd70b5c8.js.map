{"version":3,"sources":["webpack:///./src/components/GbiStacked.js","webpack:///./src/components/FullBackground.js","webpack:///./src/pages/image-stack.js"],"names":["StyledStackedBackgrounds","styled","BackgroundImage","GbiStacked","bubbles","firefoxExampleFluidImageStack","firefox","childImageSharp","fluid","Tag","id","role","aria-label","style","backgroundColor","backgroundRepeat","backgroundPosition","backgroundSize","StyledFullBackground","className","children","imageData","desktop","title","preserveStackingContext","StyledCenterWrapper","StyledContentCenterWrapper","StyledOutsideLink","a","MultipleStackedBackgroundImages","Layout","SEO","href","target","rel","maxWidth"],"mappings":"y0GAwDMA,EAA2BC,YAAOC,KAAV,uFAAGD,CAAH,+BAKfE,EAnDI,WAAO,IAAD,SACfC,EADe,EACfA,QAsBFC,EAAgC,CAvBf,EACNC,QAuBPC,gBAAgBC,MACxBJ,EAAQG,gBAAgBC,MAFY,2EAMtC,OACE,kBAACR,EAAD,CACES,IAAI,MACJD,MAAOH,EACPK,GAAG,aACHC,KAAK,MACLC,aAAW,kDACXC,MAAO,CACLC,gBAAiB,QACjBC,iBAAkB,kCAClBC,mBAAoB,4BACpBC,eAAgB,O,YCSTC,EARcjB,YArCN,SAAC,GAA6B,IAA3BkB,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAgB7BC,EAhB4C,OAC1CC,QAekBf,gBAAgBC,MAE1C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,IAAI,UACJU,UAAWA,EACXX,MAAOa,EACPP,gBAAe,UACfS,MAAM,wBACNb,GAAG,eACHC,KAAK,MACLC,aAAW,wBACXY,yBAAyB,GAExBJ,MAMiB,2FAAGnB,CAAH,qFCtCpBwB,EAAsBxB,YAAOyB,KAAV,uFAAGzB,CAAH,sCAKnB0B,EAAoB1B,IAAO2B,EAAV,qFAAG3B,CAAH,0BA8BR4B,UA1ByB,kBACtC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKR,MAAM,uCACX,kBAAC,EAAD,KACE,kBAACE,EAAD,KACE,kEACA,iEAEE,kBAACE,EAAD,CACEK,KAAK,0GACLC,OAAO,SACPC,IAAI,uBAHN,0CAFF,KAWA,iEACA,kBAAC,IAAD,CAAoBC,SAAU,KAC5B,kBAAC,EAAD","file":"component---src-pages-image-stack-js-b8b9e0774813cd70b5c8.js","sourcesContent":["import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport BackgroundImage from 'gatsby-background-image'\n\n/**\n * This component demonstrates how to use multiple stacked background images.\n * @return {*}\n * @constructor\n */\nconst GbiStacked = () => {\n  const { bubbles, firefox } = useStaticQuery(\n    graphql`\n      query {\n        bubbles: file(relativePath: { eq: \"bubbles.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 1280) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n        firefox: file(relativePath: { eq: \"firefox.png\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 223) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `\n  )\n\n  // Multiple Background Array\n  const firefoxExampleFluidImageStack = [\n    firefox.childImageSharp.fluid,\n    bubbles.childImageSharp.fluid,\n    `linear-gradient(to right, rgba(30, 75, 115, 1), rgba(255, 255, 255, 0))`,\n  ]\n\n  return (\n    <StyledStackedBackgrounds\n      Tag=\"div\"\n      fluid={firefoxExampleFluidImageStack}\n      id=\"imagestack\"\n      role=\"img\"\n      aria-label=\"A GBI background stack with the firefox example\"\n      style={{\n        backgroundColor: 'white',\n        backgroundRepeat: 'no-repeat, no-repeat, no-repeat',\n        backgroundPosition: 'bottom right, left, right',\n        backgroundSize: '',\n      }}\n    />\n  )\n}\n\nconst StyledStackedBackgrounds = styled(BackgroundImage)`\n  width: 600px;\n  height: 400px;\n`\n\nexport default GbiStacked\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\n\nimport BackgroundImage from 'gatsby-background-image'\nimport { StyledFullScreenWrapper } from './SharedStyledComponents'\n\n/**\n * In this functional component a fullscreen <BackgroundImage />  is created.\n * @param className   string    className(s) from styled-components.\n * @param children    nodes     Child-components.\n * @return {*}\n * @constructor\n */\nconst FullBackground = ({ className, children }) => {\n  const { desktop } = useStaticQuery(\n    graphql`\n      query {\n        desktop: file(relativePath: { eq: \"seamless-bg-desktop.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    `\n  )\n\n  // Single Image Data\n  const imageData = desktop.childImageSharp.fluid\n\n  return (\n    <StyledFullScreenWrapper>\n      <BackgroundImage\n        Tag=\"section\"\n        className={className}\n        fluid={imageData}\n        backgroundColor={`#040e18`}\n        title=\"Fullscreen Background\"\n        id=\"fullscreenbg\"\n        role=\"img\"\n        aria-label=\"Fullscreen Background\"\n        preserveStackingContext={true}\n      >\n        {children}\n      </BackgroundImage>\n    </StyledFullScreenWrapper>\n  )\n}\n\nconst StyledFullBackground = styled(FullBackground)`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport default StyledFullBackground\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/SEO'\nimport {\n  StyledContentCenterWrapper,\n  StyledImageWrapper,\n  StyledLink,\n} from '../components/SharedStyledComponents'\nimport GbiStacked from '../components/GbiStacked'\nimport StyledFullBackground from '../components/FullBackground'\n\nconst StyledCenterWrapper = styled(StyledContentCenterWrapper)`\n  max-width: 800px;\n  margin-top: 5rem;\n`\n\nconst StyledOutsideLink = styled.a`\n  margin-left: 0.32rem;\n`\n\nconst MultipleStackedBackgroundImages = () => (\n  <Layout>\n    <SEO title=\"Multiple Stacked Background Images\" />\n    <StyledFullBackground>\n      <StyledCenterWrapper>\n        <h1>Multiple Stacked Background Images</h1>\n        <p>\n          The Below Example is taken from the\n          <StyledOutsideLink\n            href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Backgrounds_and_Borders/Using_multiple_backgrounds\"\n            target=\"_blank\"\n            rel=\"nofollow noreferrer\"\n          >\n            MDN Article about multiple backgrounds\n          </StyledOutsideLink>\n          .\n        </p>\n        <p> All attribution goes to them : )!</p>\n        <StyledImageWrapper maxWidth={600}>\n          <GbiStacked />\n        </StyledImageWrapper>\n      </StyledCenterWrapper>\n    </StyledFullBackground>\n  </Layout>\n)\n\nexport default MultipleStackedBackgroundImages\n"],"sourceRoot":""}